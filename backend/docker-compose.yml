version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ndarite_postgres
    environment:
      POSTGRES_DB: ndarite
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - ndarite_network
    restart: unless-stopped

  # Redis for caching and task queue
  redis:
    image: redis:7-alpine
    container_name: ndarite_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ndarite_network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # FastAPI Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ndarite_backend
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql+asyncpg://postgres:password@postgres:5432/ndarite
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - ./generated_documents:/app/generated_documents
      - ./app/templates:/app/app/templates
    depends_on:
      - postgres
      - redis
    networks:
      - ndarite_network
    restart: unless-stopped
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Celery Worker (for background tasks)
  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ndarite_celery_worker
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql+asyncpg://postgres:password@postgres:5432/ndarite
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - .:/app
      - ./generated_documents:/app/generated_documents
    depends_on:
      - postgres
      - redis
    networks:
      - ndarite_network
    restart: unless-stopped
    command: celery -A app.celery_app worker --loglevel=info

  # Celery Beat (for scheduled tasks)
  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ndarite_celery_beat
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql+asyncpg://postgres:password@postgres:5432/ndarite
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - .:/app
    depends_on:
      - postgres
      - redis
    networks:
      - ndarite_network
    restart: unless-stopped
    command: celery -A app.celery_app beat --loglevel=info

  # Nginx (for production)
  nginx:
    image: nginx:alpine
    container_name: ndarite_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
      - ./generated_documents:/var/www/documents
    depends_on:
      - backend
    networks:
      - ndarite_network
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  ndarite_network:
    driver: bridge
